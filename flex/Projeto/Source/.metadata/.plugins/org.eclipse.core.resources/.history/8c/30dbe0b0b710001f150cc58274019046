<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright 2008 Google Inc. 
 Licensed under the Apache License, Version 2.0:
    http://www.apache.org/licenses/LICENSE-2.0
-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:maps="com.google.maps.*" layout="absolute" width="100%" height="100%" viewSourceURL="srcview/index.html">
  <mx:Panel title="Google Maps API for Flash Demo" width="100%" height="100%">
  <maps:Map 
    id="map" 
    key="ABQIAAAA7QUChpcnvnmXxsjC7s1fCxQGj0PqsCtxKvarsoS-iqLdqZSKfxTd7Xf-2rEc_PC9o8IsJde80Wnj4g" 
    mapevent_mapready="onMapReady(event)"
    width="100%" height="100%"/>
 </mx:Panel>
 <mx:Script>
    <![CDATA[
      import com.google.maps.LatLng;
      import com.google.maps.LatLngBounds;
      import com.google.maps.Map;
      import com.google.maps.MapEvent;
      import com.google.maps.MapMouseEvent;
      import com.google.maps.MapZoomEvent;
      import com.google.maps.MapType;
      import com.google.maps.services.ClientGeocoder;
      import com.google.maps.services.GeocodingEvent;
      import com.google.maps.overlays.Marker;
      import com.google.maps.overlays.MarkerOptions;
      import com.google.maps.InfoWindowOptions;
      import mx.controls.Alert;
      import com.google.maps.controls.ZoomControl;

      private var marker:Marker;
      private var _icons:Array = ["green-dot.png", "purple-dot.png"]; 

      private function onMapReady(event:Event):void {
        map.enableScrollWheelZoom();
        map.enableContinuousZoom();
        map.setCenter(new LatLng(-33.87205, 151.203874),
                      14,
                      MapType.NORMAL_MAP_TYPE);
        map.addControl(new ZoomControl());
        
        var bounds:LatLngBounds = map.getLatLngBounds();
        var southWest:LatLng = bounds.getSouthWest();
        var northEast:LatLng = bounds.getNorthEast();
        var lngSpan:Number = northEast.lng() - southWest.lng();
        var latSpan:Number = northEast.lat() - southWest.lat();
        for (var i:int = 0; i < 2; i++) {
          var newLat:Number = southWest.lat() + (latSpan * Math.random());
          var newLng:Number = southWest.lng() + (lngSpan * Math.random());
          var latlng:LatLng = new LatLng(newLat, newLng);
          createMarker(newLat, newLng, i, "Hi");
        }
      }

      public function createMarker(lat:Number, lon:Number, iconIndex:int, html1:String): void {
        var request:URLRequest;
        request = new URLRequest("http://gmaps-samples-flash.googlecode.com/svn/trunk/images/" + _icons[iconIndex]);
        var imageLoader:Loader = new Loader();
        imageLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, function(event:Event):void {
          var options:MarkerOptions = new MarkerOptions({hasShadow: true, icon: imageLoader, label: "hi"});
          var point:LatLng = new LatLng(lat, lon);
          var markerLocal:Marker = new Marker(point, options);
          markerLocal.addEventListener(MapMouseEvent.CLICK, function(e:MapMouseEvent):void {
            markerLocal.openInfoWindow(new InfoWindowOptions({title: "Summary", content: "Hi", hasShadow: true, pointOffset: new Point(15,12)}));
            request = new URLRequest("http://gmaps-samples-flash.googlecode.com/svn/trunk/images/blue-dot.png");
            var image2Loader:Loader = new Loader();
            image2Loader.contentLoaderInfo.addEventListener(Event.COMPLETE, function(event:Event):void {
                markerLocal.setOptions(new MarkerOptions({icon: image2Loader}));
            });
            image2Loader.load(request);
          });
          map.addOverlay(markerLocal);
         });
        imageLoader.load(request);  
     } 
    ]]>
  </mx:Script>
</mx:Application>
