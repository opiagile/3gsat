<?xml version="1.0"?>
<!--
 Copyright 2008 Google Inc. 
 Licensed under the Apache License, Version 2.0:
    http://www.apache.org/licenses/LICENSE-2.0
-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
layout="absolute" width="100%" height="100%" viewSourceURL="srcview/index.html">
   <mx:Panel title="Google Maps Flash API Poly Drawer Demo"
backgroundColor="#FFFFFF" width="100%" height="100%">
  <mx:HBox>  
   <mx:RadioButton
       id="drawmode_polygon"
    groupName="drawmode"
    label="Polygon"
    selected="true"
    click="toggleDrawMode(event);"
   />
   <mx:RadioButton
       id="drawmode_polyline"
    groupName="drawmode"
    label="Polyline"
    click="toggleDrawMode(event);"
   />
   <mx:Button
     label="Clear Map"
     click="clearMap(event);"
      />
      <mx:Button
     label="Delete Last Point"
     click="deleteLastLatLng(event);"
      />
      </mx:HBox>
       <mx:UIComponent id="mapHolder"
initialize="onHolderCreated(event);" resize="onHolderResized(event)"
width="100%" height="100%"/>
   </mx:Panel>
   <mx:Script>
       <![CDATA[
               import com.google.maps.overlays.MarkerOptions;
               import com.google.maps.LatLng;
               import com.google.maps.MapEvent;
               import com.google.maps.MapMouseEvent;
               import com.google.maps.overlays.Marker;
               import com.google.maps.Map;
               import com.google.maps.overlays.Polygon;
               import com.google.maps.overlays.Polyline;
               import mx.controls.Alert;
               
               private var map:Map;
               private var testPoint:Marker;
               private var polyLatLngs:Array = new Array();
               private var polygonMode:Boolean;
               private var polyShape;
               
               public function onHolderCreated(event:Event):void
               {
                   map = new Map;
                   map.key = "ABQIAAAA60Yi54TYljE0FQ-0E4d0nBQbQQtspPKytngpyCGhFiH97vLYsRT_WtomBMsPuZncSsVrLzD7ulJ7wQ";
                   map.addEventListener(MapEvent.MAP_READY, onMapReady);
                   mapHolder.addChild(map);
               }

               public function onHolderResized(event:Event):void
               {
                   map.setSize(new Point(mapHolder.width, mapHolder.height));
               }

               private function onMapReady(event:Event):void
               {
                   map.setCenter(new LatLng(28, -90), 6);
                   map.addEventListener(MapMouseEvent.CLICK , mapClick);
               }
               
               private function mapClick(e:MapMouseEvent):void {
                     var latlngClicked:LatLng = e.latLng;
                      polyLatLngs.push(latlngClicked);
                     drawCoordinates();
                 }
                 
                   private function deleteLastLatLng(e:Event):void {
                       if (polyLatLngs.length > 0) {
                          polyLatLngs.pop();
                      }
                      drawCoordinates();
                 }
                 
                 // Clear current Map
                  private function clearMap(e:Event):void {
                    map.clearOverlays();
                    polyShape = null;
                    polyLatLngs.length = 0;
                }


                  // Toggle from Polygon PolyLine mode
                  private function toggleDrawMode(e:Event):void {
                    map.clearOverlays();
                    polyShape = null;
                    drawCoordinates();
                  }


                   private function drawCoordinates():void {
                       map.clearOverlays();
                       if (polyLatLngs.length > 1) {
                           //Re-create Polyline/Polygon
                            polygonMode = drawmode_polygon.selected;
                          if (polygonMode) {
                            polyShape = new Polygon(polyLatLngs);
                          } else {
                            polyShape = new Polyline(polyLatLngs);
                          }
                          map.addOverlay(polyShape);
                       }
                       
                       if (polyLatLngs.length > 0) {
                          // Grab last point of polyPoints to add new marker
                          var tmpLatLng:LatLng = polyLatLngs[polyLatLngs.length -1];
                          map.addOverlay(new Marker(tmpLatLng));
                      }
                   }
                   

       ]]>
   </mx:Script>
</mx:Application>
